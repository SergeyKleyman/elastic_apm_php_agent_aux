version: '2.1'

services:
    php:
        build:
            context: .
            args:
                PHP_IMAGE_TAG: "${PHP_IMAGE_TAG:-7.2-cli}"
                AGENT_VERSION: "${AGENT_VERSION:-1.10.0}"
        depends_on:
            apm-server:
                condition: service_healthy

    apm-server:
        image: docker.elastic.co/apm/apm-server:${STACK_VERSION:-7.17.14}
        ports:
            - "${APM_SERVER_HOST:-127.0.0.1}:${APM_SERVER_PORT:-8200}:8200"
            - "${APM_SERVER_MONITOR_HOST:-127.0.0.1}:${APM_SERVER_MONITOR_PORT:-6060}:6060"
        command: >
            apm-server -e
            -E apm-server.frontend.enabled=true
            -E apm-server.frontend.rate_limit=100000
            -E apm-server.host=0.0.0.0:8200
            -E apm-server.read_timeout=1m
            -E apm-server.shutdown_timeout=2m
            -E apm-server.write_timeout=1m
            -E apm-server.rum.enabled=true
            -E setup.kibana.host=kibana:5601
            -E setup.template.settings.index.number_of_replicas=0
            -E xpack.monitoring.elasticsearch=true
            -E output.elasticsearch.enabled=${APM_SERVER_ELASTICSEARCH_OUTPUT_ENABLED:-true}
        cap_drop:
            - ALL
        cap_add:
            - CHOWN
            - DAC_OVERRIDE
            - SETGID
            - SETUID
        logging:
            driver: 'json-file'
            options:
                max-size: '2m'
                max-file: '5'
        depends_on:
            elasticsearch:
                condition: service_healthy
            kibana:
                condition: service_healthy
        healthcheck:
            test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://apm-server:8200/"]
            retries: 10
            interval: 10s

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:${STACK_VERSION:-7.17.14}
        environment:
            - cluster.name=docker-cluster
            - xpack.security.enabled=false
            - bootstrap.memory_lock=true
            - network.host=0.0.0.0
            - discovery.type=single-node
            - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
            - "path.data=/usr/share/elasticsearch/data/${STACK_VERSION:-7.17.14}"
        ulimits:
            memlock:
                soft: -1
                hard: -1
        mem_limit: 2g
        logging:
            driver: 'json-file'
            options:
                max-size: '2m'
                max-file: '5'
        ports:
            - "127.0.0.1:${ELASTICSEARCH_PORT:-9200}:9200"
        healthcheck:
            test: ["CMD-SHELL", "curl -s http://localhost:9200/_cluster/health | grep -vq '\"status\":\"red\"'"]
            retries: 10
            interval: 20s

    kibana:
        image: docker.elastic.co/kibana/kibana:${STACK_VERSION:-7.17.14}
        environment:
            SERVER_NAME: kibana.example.org
            ELASTICSEARCH_URL: http://elasticsearch:9200
        ports:
            - "${KIBANA_HOST:-127.0.0.1}:${KIBANA_PORT:-5601}:5601"
        logging:
            driver: 'json-file'
            options:
                max-size: '2m'
                max-file: '5'
        healthcheck:
            test: ["CMD", "curl", "--write-out", "'HTTP %{http_code}'", "--silent", "--output", "/dev/null", "http://kibana:5601/"]
            retries: 10
            interval: 10s
        depends_on:
            elasticsearch:
                condition: service_healthy
